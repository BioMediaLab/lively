### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


"""represents one of lively's classes"""
type Class {
  description: String!
  files(max: Int): [ClassFile!]!

  """Class ID"""
  id: String!
  members(max: Int): [ClassMember!]!
  myRole: ClassMember!
  name: String!
  unit(unit_id: ID): ClassUnit!
  unitByOrder(order: Int): ClassUnit
  units(deployed: Boolean): [ClassUnit!]!
}

type ClassFile {
  class: Class!
  class_id: ID!
  creator: User!
  description: String
  file_key: String!
  file_name: String!
  id: ID!
  mimetype: String!
  order: Int
  unit: ClassUnit!
  unit_id: ID!
  uploader_id: ID!
  url: String!
}

input ClassFileReorder {
  file_id: ID
  index: Int
}

type ClassMember {
  class: Class!
  id: String!
  role: ClassRole!
  user: User!
}

"""A user's role in a given class"""
enum ClassRole {
  ADMIN
  ASSISTANT
  AUDITOR
  PROFESSOR
  STUDENT
}

type ClassUnit {
  class: Class!
  class_id: ID!
  creator_id: ID!
  deployed: Boolean!
  description: String
  files: [ClassFile!]!
  id: ID!
  last_modified: String!
  modifier: User!
  name: String!
  order: Int
}

input ClassUnitReorder {
  class_id: ID
  index: Int
}

input FileUpload {
  file: Upload
  name: String
}

type Mutation {
  cloneClassFile(new_class_id: ID, old_file: ID): ClassFile!
  createClassUnit(auto_deploy: Boolean, class_id: ID, description: String, name: String): ClassUnit!
  createQuiz(class_id: ID, title: String): Quiz!
  deleteClassFile(file_id: ID!): ClassFile!
  loginGoogle(code: String, sessionInfo: String): Session!
  logout: Session!
  rmClassUnit(unit_id: ID): Boolean!
  updateAdmin(setAdmin: Boolean, user_id: ID): User!
  updateClassFile(description: String, file_id: ID, name: String, order: Int, unit_id: ID): ClassFile!
  updateClassUnit(add_files: [ID!], deploy: Boolean, description: String, name: String, order: Int, unit_id: ID): ClassUnit!
  updateProfilePic(pic: FileUpload!): User!
  uploadClassFile(class_id: ID, description: String, file: FileUpload!, order: Int, unit_id: ID): ClassFile!
}

type Query {
  class(class_id: ID): Class!
  classFile(file_id: ID): ClassFile!
  classQuizzes(class_id: ID): [Quiz!]!
  googleRedirect: String!
  me: User!
  myClasses(
    """
    Return only classes where the user has a given role, such as "Admin"
    """
    role: ClassRole
  ): [ClassMember!]!
  myClassRole(class_id: ID): ClassMember!
  users: [User!]!
}

type Quiz {
  class_id: ID!
  id: ID!
  title: String!
}

type Session {
  """current user's id"""
  id: ID!

  """current user's session token"""
  session: String

  """
  A string describing the context (browser, ip) of the session. So the user can verify it.
  """
  sessionInfo: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  firstName: String!
  hasVisited: Boolean!
  id: ID!
  lastName: String!
  name: String!
  photo_key: String
  photo_url: String
  siteAdmin: Boolean!
}
