# Creates the servers running web

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-node-deployment
  labels:
    app: lively-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lively-web
  template:
    metadata:
      labels:
        app: lively-web
    spec:
      containers:
        - name: web
          image: dieff07/lively_web:initial
          command: ["yarn", "run", "start"]
          ports:
            - containerPort: 3000

---
#Cluster service
apiVersion: v1
kind: Service
metadata:
  name: lively-web-internal
spec:
  selector:
    app: lively-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      name: http

---
#Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-lively-web
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
spec:
  tls:
    - hosts:
        - lively.im
        - www.lively.im
        - web.lively.im
      secretName: lively-web-tls
  rules:
    - host: web.lively.im
      http:
        paths:
          - path: /
            backend:
              serviceName: lively-web-internal
              servicePort: 80
    - host: www.lively.im
      http:
        paths:
          - path: /
            backend:
              serviceName: lively-web-internal
              servicePort: 80
    - host: lively.im
      http:
        paths:
          - path: /
            backend:
              serviceName: lively-web-internal
              servicePort: 80
