# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-node-deployment
  labels:
    app: lively-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lively-api
  template:
    metadata:
      labels:
        app: lively-api
    spec:
      containers:
        - name: api
          image: dieff07/lively_api:latest
          imagePullPolicy: "Always"
          command: ["yarn", "run", "start"]
          ports:
            - containerPort: 4000
          env:
            - name: NODE_ENV
              value: production
            - name: REDIS_HOST
              value: redis-internal.default
            - name: REDIS_PORT
              value: "6379"
            - name: GOOGLE_APP_REDIRECT_URL
              value: "https://lively.im/login"
            - name: PROD_DB_STRING
              valueFrom:
                secretKeyRef:
                  name: prod-db-connect-string
                  key: PROD_DB_STRING
            - name: "GOOGLE_APP_SECRET"
              valueFrom:
                secretKeyRef:
                  name: "google-credentials"
                  key: "app_secret"
            - name: "GOOGLE_APP_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  name: "google-credentials"
                  key: "app_id"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 4000
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 5

---
#Cluster service
apiVersion: v1
kind: Service
metadata:
  name: lively-api-internal
spec:
  selector:
    app: lively-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
      name: http

---
#Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-lively-api
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
spec:
  tls:
    - hosts:
        - api.lively.im
      secretName: lively-api-tls
  rules:
    - host: api.lively.im
      http:
        paths:
          - path: /
            backend:
              serviceName: lively-api-internal
              servicePort: 80
